{"version":3,"sources":["webpack:///src/view/RoleManage.vue","webpack:///./src/view/RoleManage.vue?8dd2","webpack:///./src/view/RoleManage.vue"],"names":["RoleManage","data","TableList","label","prop","Roles","Role","loading","AddRoleVisible","SetMenuPermissionVisible","MenuTree","defaultProps","children","Menus","RoleId","methods","SaveMenuPermission","_this","this","menuIds","$refs","tree","getCheckedKeys","length","Object","api","roleId","then","res","IsSuccess","$notify","title","message","type","Message","AlertSetMenuPermission","row","_this2","id","TModel","$nextTick","checkedKeys","Array","forEach","ea","push","setCheckedKeys","AddRole","_this3","GetRoles","_this4","DeleteRole","_this5","created","_this6","menu","filter","x","parentId","item","menuObj","menuSecond","child","view_RoleManage","render","_vm","_h","$createElement","_c","_self","attrs","size","on","click","_v","$event","visible","width","close-on-click-modal","update:visible","staticClass","placeholder","model","value","callback","$$v","$set","expression","check-strictly","staticStyle","margin-left","ref","show-checkbox","default-expand-all","node-key","highlight-current","props","directives","name","rawName","margin-top","_l","index","key","heigth","scopedSlots","_u","fn","scope","disabled","onConfirm","slot","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/7.86801229c656f68acd00.js","sourcesContent":["<template>\r\n    <div>\r\n        <el-button type=\"primary\" size=\"small\" @click=\"GetRoles\"> 查询 </el-button>\r\n        <el-button size=\"small\" @click=\" Role={}, AddRoleVisible = true\"> 新增 </el-button>\r\n        <el-dialog title=\"编辑角色\" :visible.sync=\"AddRoleVisible\" width=\"30%\" :close-on-click-modal=\"false\">\r\n            <div class=\"divdialog\">\r\n                <el-input type=\"text\" placeholder=\"角色名称\" v-model=\"Role.name\"></el-input>\r\n                <el-input type=\"text\" placeholder=\"角色备注\" v-model=\"Role.remark\"></el-input>\r\n                <el-button type=\"primary\" @click=\"AddRole\">确 定</el-button>\r\n                <el-button @click=\"AddRoleVisible = false\">取 消</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <el-dialog title=\"配置菜单权限\" :visible.sync=\"SetMenuPermissionVisible\" check-strictly=true width=\"30%\" :close-on-click-modal=\"false\">\r\n            <div style=\"margin-left:20px;\">\r\n                <el-tree :data=\"MenuTree\" show-checkbox default-expand-all node-key=\"id\" ref=\"tree\" highlight-current\r\n                    :props=\"defaultProps\">\r\n                </el-tree>\r\n                <el-button type=\"primary\" @click=\"SaveMenuPermission\"> 设置</el-button>\r\n                <el-button @click=\"SetMenuPermissionVisible=false\">  取消</el-button>\r\n            </div>\r\n        </el-dialog>\r\n        <el-table :data=\"Roles\" style=\"width: 100%; margin-top: 20px; \" size=\"mini\" v-loading=\"loading\">\r\n            <el-table-column v-for=\"(item,index) in TableList\" :key=\"index\" :label=\"item.label\" :prop=\"item.prop\">\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"200\" heigth=\"100\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"text\" :disabled=\"scope.row.type == 1\"\r\n                        @click=\"Role= scope.row, AddRoleVisible = true\">编辑</el-button>\r\n                    <el-button type=\"text\" :disabled=\"scope.row.type == 1\" @click=\"AlertSetMenuPermission(scope.row)\">\r\n                        配置菜单权限\r\n                    </el-button>\r\n                    <el-popconfirm title=\"确认执行删除操作吗\" @onConfirm=\"DeleteRole(scope.row)\">\r\n                        <el-button type=\"text\" :disabled=\"scope.row.type == 1\" slot=\"reference\">删除</el-button>\r\n                    </el-popconfirm>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {\r\n        GetAllRoleRequest, AddRoleRequest,\r\n        RemoveRoleRequest, UpdateRoleRequest,\r\n        GetMenusByRoleRequest, GetAllMenuRequest, SetMenuPermissionsRequest\r\n    } from '../api/api'\r\n    export default {\r\n        data() {\r\n            return {\r\n                TableList: [\r\n                    {\r\n                        label: \"角色名称\",\r\n                        prop: \"name\"\r\n                    },\r\n                    {\r\n                        label: \"备注\",\r\n                        prop: \"remark\"\r\n                    }\r\n                ],\r\n                Roles: [],\r\n                Role: {\r\n\r\n                },\r\n                loading: false,\r\n                AddRoleVisible: false,\r\n                SetMenuPermissionVisible: false,\r\n                MenuTree: [],\r\n                defaultProps: {\r\n                    children: 'children',\r\n                    label: 'title'\r\n                },\r\n                Menus:[],\r\n                RoleId: 0\r\n            }\r\n        },\r\n        methods: {\r\n            SaveMenuPermission: function () {\r\n                var menuIds = this.$refs.tree.getCheckedKeys();\r\n                if (menuIds.length > 0) {\r\n                    SetMenuPermissionsRequest({ roleId: this.RoleId, menuIds: menuIds }).then(res => {\r\n                        if (res.IsSuccess) {\r\n                            this.$notify({\r\n                                title: '成功',\r\n                                message: '设置成功',\r\n                                type: 'success'\r\n                            });\r\n                            this.SetMenuPermissionVisible = false;\r\n                        }\r\n                        else {\r\n                            this.$notify({\r\n                                title: '失败',\r\n                                message: res.Message,\r\n                                type: 'error'\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n            AlertSetMenuPermission: function (row) {\r\n                this.SetMenuPermissionVisible = true;\r\n                GetMenusByRoleRequest({ roleId: row.id }).then(res => {\r\n                    this.RoleId = row.id;\r\n                    if (res.IsSuccess) {\r\n                        if (res.TModel != null && res.TModel.length > 0) {\r\n                            this.$nextTick(() => {\r\n                                var checkedKeys = new Array();\r\n                                res.TModel.forEach(ea => {\r\n                                    checkedKeys.push(ea.id);\r\n                                });\r\n                                this.$refs.tree.setCheckedKeys(checkedKeys);\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.$notify({\r\n                            title: '失败',\r\n                            message: res.Message,\r\n                            type: 'error'\r\n                        });\r\n                    }\r\n                })\r\n            },\r\n            AddRole: function () {\r\n                if (this.Role.id > 0) {\r\n                    UpdateRoleRequest(this.Role).then(res => {\r\n                        if (res.IsSuccess) {\r\n                            this.GetRoles();\r\n                            this.AddRoleVisible = false;\r\n                        }\r\n                        else {\r\n                            this.$notify({\r\n                                title: '失败',\r\n                                message: res.Message,\r\n                                type: 'error'\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    AddRoleRequest(this.Role).then(res => {\r\n                        if (res.IsSuccess) {\r\n                            this.GetRoles();\r\n                            this.AddRoleVisible = false;\r\n                        }\r\n                        else {\r\n                            this.$notify({\r\n                                title: '失败',\r\n                                message: res.Message,\r\n                                type: 'error'\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                this.Role = {};\r\n            },\r\n            GetRoles: function () {\r\n                this.loading = true;\r\n                GetAllRoleRequest().then(res => {\r\n                    if (res.IsSuccess) {\r\n                        this.Roles = res.TModel;\r\n                    }\r\n                    else {\r\n                        this.$notify({\r\n                            title: '失败',\r\n                            message: res.Message,\r\n                            type: 'error'\r\n                        });\r\n                    }\r\n                });\r\n                this.loading = false;\r\n            },\r\n            DeleteRole: function (row) {\r\n                RemoveRoleRequest({ roleId: row.id }).then(res => {\r\n                    if (res.IsSuccess) {\r\n                        this.$notify({\r\n                            title: '成功',\r\n                            message: '删除成功',\r\n                            type: 'success'\r\n                        });\r\n                        this.GetRoles();\r\n                    }\r\n                    else {\r\n                        this.$notify({\r\n                            title: '失败',\r\n                            message: res.Message,\r\n                            type: 'error'\r\n                        });\r\n                    }\r\n                });\r\n\r\n            }\r\n        },\r\n        created() {\r\n            GetAllMenuRequest().then(res => {\r\n                if (res.IsSuccess) {\r\n                    var menu = res.TModel;\r\n                    this.Menus = menu;\r\n                    if (menu != null && menu.length > 0) {\r\n                        menu.filter(x => x.parentId == 0).forEach(item => {\r\n                            var menuObj = {\r\n                                id: item.id,\r\n                                title: item.title,\r\n                                children: []\r\n                            };\r\n                            menu.filter(x => x.parentId == item.id).forEach(ea => {\r\n                                var menuSecond = {\r\n                                    id: ea.id,\r\n                                    title: ea.title,\r\n                                    children: []\r\n                                };\r\n                                menu.filter(x => x.parentId == ea.id).forEach(child => {\r\n                                    menuSecond.children.push({\r\n                                        id: child.id,\r\n                                        title: child.title,\r\n                                    });\r\n                                });\r\n                                menuObj.children.push(menuSecond);\r\n                            });\r\n                            this.MenuTree.push(menuObj);\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.$notify({\r\n                        title: '失败',\r\n                        message: res.Message,\r\n                        type: 'error'\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/view/RoleManage.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.GetRoles}},[_vm._v(\" 查询 \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"small\"},on:{\"click\":function($event){_vm.Role={}, _vm.AddRoleVisible = true}}},[_vm._v(\" 新增 \")]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"编辑角色\",\"visible\":_vm.AddRoleVisible,\"width\":\"30%\",\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.AddRoleVisible=$event}}},[_c('div',{staticClass:\"divdialog\"},[_c('el-input',{attrs:{\"type\":\"text\",\"placeholder\":\"角色名称\"},model:{value:(_vm.Role.name),callback:function ($$v) {_vm.$set(_vm.Role, \"name\", $$v)},expression:\"Role.name\"}}),_vm._v(\" \"),_c('el-input',{attrs:{\"type\":\"text\",\"placeholder\":\"角色备注\"},model:{value:(_vm.Role.remark),callback:function ($$v) {_vm.$set(_vm.Role, \"remark\", $$v)},expression:\"Role.remark\"}}),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.AddRole}},[_vm._v(\"确 定\")]),_vm._v(\" \"),_c('el-button',{on:{\"click\":function($event){_vm.AddRoleVisible = false}}},[_vm._v(\"取 消\")])],1)]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"配置菜单权限\",\"visible\":_vm.SetMenuPermissionVisible,\"check-strictly\":\"true\",\"width\":\"30%\",\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.SetMenuPermissionVisible=$event}}},[_c('div',{staticStyle:{\"margin-left\":\"20px\"}},[_c('el-tree',{ref:\"tree\",attrs:{\"data\":_vm.MenuTree,\"show-checkbox\":\"\",\"default-expand-all\":\"\",\"node-key\":\"id\",\"highlight-current\":\"\",\"props\":_vm.defaultProps}}),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.SaveMenuPermission}},[_vm._v(\" 设置\")]),_vm._v(\" \"),_c('el-button',{on:{\"click\":function($event){_vm.SetMenuPermissionVisible=false}}},[_vm._v(\"  取消\")])],1)]),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticStyle:{\"width\":\"100%\",\"margin-top\":\"20px\"},attrs:{\"data\":_vm.Roles,\"size\":\"mini\"}},[_vm._l((_vm.TableList),function(item,index){return _c('el-table-column',{key:index,attrs:{\"label\":item.label,\"prop\":item.prop}})}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"200\",\"heigth\":\"100\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"text\",\"disabled\":scope.row.type == 1},on:{\"click\":function($event){_vm.Role= scope.row, _vm.AddRoleVisible = true}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\",\"disabled\":scope.row.type == 1},on:{\"click\":function($event){return _vm.AlertSetMenuPermission(scope.row)}}},[_vm._v(\"\\n                    配置菜单权限\\n                \")]),_vm._v(\" \"),_c('el-popconfirm',{attrs:{\"title\":\"确认执行删除操作吗\"},on:{\"onConfirm\":function($event){return _vm.DeleteRole(scope.row)}}},[_c('el-button',{attrs:{\"slot\":\"reference\",\"type\":\"text\",\"disabled\":scope.row.type == 1},slot:\"reference\"},[_vm._v(\"删除\")])],1)]}}])})],2)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1912f325\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/view/RoleManage.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1912f325\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./RoleManage.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./RoleManage.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./RoleManage.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1912f325\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./RoleManage.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/view/RoleManage.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}